package com.heeexy.example.engine.library;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.FloatByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;

/**
 * <p>ClassName: CwfaceLibrary</p>
 * Description:云从视频算法SDK<br/>
 * @date 2019年12月1日 下午9:29:19 
 * @author yckj0914
 * @version 1.0
 * @since JDK 1.7
 */ 
public interface CwvideoLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "cwvideolive_sdk";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(CwvideoLibrary.JNA_LIBRARY_NAME);
	public static final CwvideoLibrary INSTANCE = (CwvideoLibrary)Native.loadLibrary(CwvideoLibrary.JNA_LIBRARY_NAME, CwvideoLibrary.class);
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_OK = (int)0;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_NO_MEMORY = (int)-1;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_INVALID_PARAM = (int)-2;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_DATA_TOO_LONG = (int)-3;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_SYS = (int)-4;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_ENGINE = (int)-5;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_BUSSY = (int)-6;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_TIMEOUT = (int)-7;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_CONFIG_FILE = (int)-8;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_CREATE_PROCESS = (int)-9;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_PROCESS_TOO_MANY = (int)-10;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_LICENCE = (int)-11;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_IMG = (int)-12;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_NO_FACE = (int)-13;
	/** <i>native declaration : cwvideolive_sdk.h</i> */
	public static final int FG_ERR_FEA_LEN_INVALID = (int)-14;
	/**
	 * Function:   CWVLEngine_Open();<br>
	 * Description:  Open video-liveness detection engine.<br>
	 * Parameters:  <br>
	 * p_handle --   receive the handle of the engine if opened successfully<br>
	 * process_cnt -- task process count.<br>
	 * configure -- config file path<br>
	 * lip_thread_cnt -- tip-language detect thread count.<br>
	 * silent_vl_config -- silent-video liveness config file path<br>
	 * cw_key_licence -- licence.<br>
	 * return:<br>
	 * 0 -- No error<br>
	 * others-- Error<br>
	 * Original signature : <code>int CWVLEngine_Open(long long*, int, const char*, int, char*, const char*)</code><br>
	 * <i>native declaration : cwvideolive_sdk.h:41</i><br>
	 */
	int CWVLEngine_Open(LongByReference p_handle, int process_cnt, Pointer configure, int lip_thread_cnt, Pointer silent_vl_config, Pointer cw_key_licence);

	/**
	 * Function:   CWVLEngine_Close();<br>
	 * Description:  Close video-liveness detection engine.<br>
	 * Parameters:<br>
	 * handle --  opened handle of the engine.<br>
	 * return:<br>
	 * 0 -- No error<br>
	 * others-- Error<br>
	 * Original signature : <code>int CWVLEngine_Close(long long)</code><br>
	 * <i>native declaration : cwvideolive_sdk.h:55</i>
	 */
	int CWVLEngine_Close(long handle);
	/**
	 * Function:   CWVLEngine_GenerateLitLabel();<br>
	 * Description:  GenerateLitLabel.<br>
	 * Parameters:<br>
	 * handle --  opened handle of the engine.<br>
	 * labels -- to receive the labels<br>
	 * iLabelLen -- label lenght<br>
	 * token -- to receive token<br>
	 * timeout_ms -- timeout<br>
	 * return:<br>
	 * 0 -- No error<br>
	 * others-- Error<br>
	 * Original signature : <code>int CWVLEngine_GenerateLitLabel(long long, char*, int, char*, int)</code><br>
	 * <i>native declaration : cwvideolive_sdk.h:73</i><br>
	 */
	int CWVLEngine_GenerateLitLabel(long handle, Pointer labels, int iLabelLen, Pointer token, int timeout_ms);
	
	/**
	 * Function:   CWVLEngine_LipLuanguageDetect();<br>
	 * Description:  lip language detect.<br>
	 * Parameters:<br>
	 * handle --   receive the handle of the facego engine if opened successfully<br>
	 * task_num -- task number, string. unique number.<br>
	 * videoPath    	 -- video file name<br>
	 * labels    -- labels to recognize.<br>
	 * token  	 --  token generated by CWVLEngine_GenerateLitLabel.<br>
	 * face_buf    -- to recieve face iamge data when detected successfully.<br>
	 * face_buf_size   -- face image size.<br>
	 * encoder -- face image encoded format, ".jpg", ".png" supported.<br>
	 * confidence -- liveness confidence score<br>
	 * labelTimeThreshold -- lable timeout.<br>
	 * timeout_ms -- api timeout, in miliseconds<br>
	 * return:<br>
	 * 0 -- No error<br>
	 * others-- Error<br>
	 * Original signature : <code>int CWVLEngine_IsAlive(long long, char*, char*, char*, char*, unsigned char*, int*, const char*, float*, int, int)</code><br>
	 * <i>native declaration : cwvideolive_sdk.h:96</i><br>
	 */
	int CWVLEngine_IsAlive(long handle, Pointer task_num, Pointer videoPath, Pointer labels, Pointer token, Pointer face_buf, IntByReference face_buf_size, Pointer encoder, FloatByReference confidence, int labelTimeThreshold, int timeout_ms);
	/**
	 * Function:   CWVLEngine_SVLivenessDetect();<br>
	 * Description:  silent-video liveness detect.<br>
	 * Parameters:<br>
	 * handle --   receive the handle of the facego engine if opened successfully<br>
	 * task_num -- task number, string. unique number.<br>
	 * videoPath    	 -- video file name<br>
	 * confidence    --  to receive liveness confidence result.<br>
	 * data_img --- returned best face image data<br>
	 * image_len -- returned image data length.<br>
	 * timeout_ms -- api timeout, in miliseconds<br>
	 * return:<br>
	 * 0 -- No error<br>
	 * others-- Error<br>
	 * Original signature : <code>int CWVLEngine_SVLivenessDetect(long long, char*, char*, float*, unsigned char*, int*, int)</code><br>
	 * <i>native declaration : cwvideolive_sdk.h:118</i><br>
	 */
	int CWVLEngine_SVLivenessDetect(long handle, Pointer task_num, Pointer videoPath, FloatByReference confidence, Pointer data_img, IntByReference image_len, int timeout_ms);
	
}
